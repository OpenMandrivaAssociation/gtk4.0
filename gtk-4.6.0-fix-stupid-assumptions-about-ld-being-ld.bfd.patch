diff -uraN gtk-4.10.1/demos/gtk-demo/meson.build omv-gtk-4.10.1/demos/gtk-demo/meson.build
--- gtk-4.10.1/demos/gtk-demo/meson.build	2023-03-14 12:50:49.000000000 +0100
+++ omv-gtk-4.10.1/demos/gtk-demo/meson.build	2023-03-18 20:27:25.389740046 +0100
@@ -162,7 +162,7 @@
   objcopy_supports_add_symbol = run_command(objcopy, '--help', check: false).stdout().contains('--add-symbol')
 endif
 
-ld = find_program('ld', required : false)
+ld = find_program('ld.bfd', required : false)
 
 if not meson.is_cross_build() and build_machine.cpu_family() != 'arm' and build_machine.system() == 'linux' and objcopy.found() and objcopy_supports_add_symbol and ld.found()
   glib_compile_resources = find_program('glib-compile-resources')
diff -uraN gtk-4.10.1/demos/widget-factory/meson.build omv-gtk-4.10.1/demos/widget-factory/meson.build
--- gtk-4.10.1/demos/widget-factory/meson.build	2023-03-14 12:50:49.000000000 +0100
+++ omv-gtk-4.10.1/demos/widget-factory/meson.build	2023-03-18 20:27:52.641831479 +0100
@@ -6,7 +6,7 @@
   objcopy_supports_add_symbol = run_command(objcopy, '--help', check: false).stdout().contains('--add-symbol')
 endif
 
-ld = find_program('ld', required : false)
+ld = find_program('ld.bfd', required : false)
 
 if not meson.is_cross_build() and build_machine.cpu_family() != 'arm' and build_machine.system() == 'linux' and objcopy.found() and objcopy_supports_add_symbol and ld.found()
   glib_compile_resources = find_program('glib-compile-resources')
diff -uraN gtk-4.10.1/gtk/meson.build omv-gtk-4.10.1/gtk/meson.build
--- gtk-4.10.1/gtk/meson.build	2023-03-14 12:50:49.000000000 +0100
+++ omv-gtk-4.10.1/gtk/meson.build	2023-03-18 20:28:30.997145354 +0100
@@ -790,7 +790,7 @@
   objcopy_supports_add_symbol = run_command(objcopy, '--help', check: false).stdout().contains('--add-symbol')
 endif
 
-ld = find_program('ld', required : false)
+ld = find_program('ld.bfd', required : false)
 
 if not meson.is_cross_build() and build_machine.cpu_family() == 'x86_64' and build_machine.system() == 'linux' and objcopy.found() and objcopy_supports_add_symbol and ld.found()
   glib_compile_resources = find_program('glib-compile-resources')
